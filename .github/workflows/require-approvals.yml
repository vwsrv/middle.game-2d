name: Require Two Approvals

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  check-approvals:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check Required Approvals
        uses: actions/github-script@v7
        with:
          script: |
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const approvedReviews = reviews.filter(review => 
              review.state === 'APPROVED' && 
              review.user.type !== 'Bot'
            );

            const uniqueApprovers = [...new Set(approvedReviews.map(review => review.user.login))];

            console.log(`Found ${uniqueApprovers.length} unique approvers: ${uniqueApprovers.join(', ')}`);

            if (uniqueApprovers.length < 2) {
              core.setFailed(`❌ This PR requires at least 2 approvals. Currently has ${uniqueApprovers.length} approval(s).`);
            } else {
              console.log('✅ PR has sufficient approvals');
            }

      - name: Check if PR is ready for merge
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const approvedReviews = reviews.filter(review => 
              review.state === 'APPROVED' && 
              review.user.type !== 'Bot'
            );

            const uniqueApprovers = [...new Set(approvedReviews.map(review => review.user.login))];

            if (uniqueApprovers.length >= 2 && pr.mergeable_state === 'clean') {
              console.log('✅ PR is ready for merge with sufficient approvals');
            } else if (uniqueApprovers.length < 2) {
              console.log('⚠️ PR needs more approvals');
            } else if (pr.mergeable_state !== 'clean') {
              console.log('⚠️ PR has merge conflicts or other issues');
            } 